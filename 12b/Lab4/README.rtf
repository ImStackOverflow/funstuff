{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 For lab04 I Gavin Chen submitted cArrays.c alphaNum.c and charType.c\
For cArrays.c and alphaNum.c I copied the code provided and was able to compile the programs and run them. for cArrays it created an array of a size inputed by the user and filled it with multiples of 2. For alphaNum it was a simple example of the isalpha() function. \
\
charType was the code I wrote and it parsed and organized a given input text and sorted it into its respective arrays for output. It allocated arrays to store characters based using the calloc command, and deallocated them after use by the free() command. It utilized the standard isalpha, isdigit, isspace, etc\'85 commands. It parsed files using the getline command and stored it in a dynamically allocated array. The biggest difficulty was with the pointers and knowing which operator to use when.  \
\
Makefile: compiled charType into binary file, creates output file, runs charType on charType.c \
clean utility deletes output file and compiled binary file.\
check utility runs valgrind.}